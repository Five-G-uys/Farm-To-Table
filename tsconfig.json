{
  "compilerOptions": {
    "target": "es5" /* ? Maybe should be "es5" ? Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "jsx": "react" /* Specify what JSX code is generated. */,

    /* Modules */
<<<<<<< HEAD
    "module": "CommonJS" /* Specify what module code is generated. */,
    // "rootDir": "./src/**/*",                                  /* Specify the root folder within your source files. */
=======
    "module": "commonjs" /* Specify what module code is generated. */,
>>>>>>> 198b91ccfa8d055a59bd225bfbd37f6d87ae5fa7
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,

    /* JavaScript Support */
    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */,

    /* Emit */
    "outDir": "./dist" /* Specify an output folder for all emitted files. */,

    /* Interop Constraints */
    "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied `any` type.. */

    /* Completeness */
    // "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */
  },
  "include": ["src/**/*.ts", "src/server/db/seed.ts", "src/client/index.tsx"],
  "exclude": ["node_modules"]
}
